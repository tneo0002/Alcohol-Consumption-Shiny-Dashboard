geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
Literacy_Rate
varName = "Unemployment Rate"
colorVar = "Major Religion"
library(ggplot2)
ggplot(data = world_sf_year,
aes(x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
runApp()
library(sf)
shinyServer(function(input, output) {
observeEvent(input$colorCodeCause)
observeEvent(input$yearCause)
observeEvent(input$cause)
output$scatterPlotCause <- renderPlot({
scatterPlot_func <- function(year, varName, colorVar){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
literacy
} else if (varName == "Production"){
production
} else if (varName == "Unemployment Rate"){
unemployment}
filename = paste(
"DVP/data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
selectedVar <- scatterPlot_func(year = input$yearCause,
varName = input$cause,
colorVar = input$colorCodeCause)
})
})
runApp()
runApp()
runApp()
library(readr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
year = 2015
world_sf_year <- world_sf %>%
filter(Year == year)
varName = "Unemployment Rate"
colorVar = "Major Religion"
world_sf_year <- world_sf %>%
filter(Year == year)
year = "2015"
world_sf_year <- world_sf %>%
filter(Year == year)
world_sf_year <- world_sf %>%
filter(Year == 2015)
library(sf)
world_sf <-  st_read("data/world_shape_file/",
quiet = TRUE)
dataSet = "unemployment"
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
library(readr)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
year = 2015
world_sf_year <- world_sf %>%
filter(Year == year)
varName = "Unemployment Rate"
colorVar = "Major Religion"
library(ggplot2)
ggplot(data = world_sf_year,
aes(x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
ggplot(data = world_sf_year,
aes(x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
scatterPlot_func <- function(colorVar, year, varName){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
literacy
} else if (varName == "Production"){
production
} else if (varName == "Unemployment Rate"){
unemployment
}
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(
x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment
},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion
})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
selectedVar <- scatterPlot_func(input$colorCause,
input$yearCause,
input$cause)
selectedVar <- scatterPlot_func("Region",
2015,
"Literacy Level")
"unemployment"
scatterPlot_func <- function(colorVar, year, varName){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
"literacy"
} else if (varName == "Production"){
"production"
} else if (varName == "Unemployment Rate"){
"unemployment"
}
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(
x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment
},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion
})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
selectedVar <- scatterPlot_func("Region",
2015,
"Literacy Level")
selectedVar <- scatterPlot_func("Region",
2015,
"Production")
selectedVar <- scatterPlot_func("Region",
2015,
"Production")
library(sf)
library(readr)
library(ggplot2)
scatterPlot_func <- function(colorVar, year, varName){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
"literacy"
} else if (varName == "Production"){
"production"
} else if (varName == "Unemployment Rate"){
"unemployment"
}
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(
x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment
},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion
})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
selectedVar <- scatterPlot_func("Region",
2015,
"Production")
selectedVar
scatterPlot_func("Region",
2015,
"Unemployment Rate")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
scatterPlot_func <- function(colorVar, year, varName){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
"literacy"
} else if (varName == "Production"){
"production"
} else if (varName == "Unemployment Rate"){
"unemployment"
}
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(
x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment
},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion
})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
scatterPlot_func("Region",
2015,
"Unemployment Rate")
runApp()
runApp()
scatterPlot_func <- function(colorVar, year, varName){
# Read shape file
world_sf <-  st_read("data/world_shape_file/", quiet = TRUE)
dataSet = if(varName == "Literacy Level"){
"literacy"
} else if (varName == "Production"){
"production"
} else if (varName == "Unemployment Rate"){
"unemployment"
}
filename = paste(
"data/cause/rrc-consumption-",
dataSet,
".csv",
sep = ""
)
dat <- read_csv(filename,
show_col_types = FALSE)
world_sf <- world_sf %>%
left_join(dat,
by = c("NAME" = "Country"))
world_sf_year <- world_sf %>%
filter(Year == year)
ggplot(data = world_sf_year,
aes(
x = if(varName == "Literacy Level"){
Literacy_Rate
} else if (varName == "Production"){
Production_Value
} else if (varName == "Unemployment Rate"){
Unemployment
},
y = Consumption,
color = if(colorVar == "Region"){
Region
} else if (colorVar == "Major Religion"){
Major_Religion
})) +
geom_point( size = 2.3, alpha = 0.7) +
theme_classic() +
theme(axis.line.x = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm"))),
axis.line.y = element_line(arrow = arrow(type = "closed", length = unit(0.3, "cm")))) +
xlab(varName) +
guides(color = guide_legend(title = colorVar)) +
scale_color_brewer(name = "Color", palette = "Accent")
}
a <- scatterPlot_func("Region",
input$yearCause,
"Unemployment Rate")
runApp()
dat = data.frame(x = 1:10, y = 1:10)
ggplot(dat, aes(x, y)) + geom_point()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
